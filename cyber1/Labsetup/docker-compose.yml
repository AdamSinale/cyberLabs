version: "3"

services:
    Attacker:
        image: handsonsecurity/seed-ubuntu:large
        container_name: Attacker-10.9.0.2
        tty: true
        cap_add:
                - ALL
        networks:
            net-10.9.0.0:
                ipv4_address: 10.9.0.2
        volumes:
                - ./volumes:/volumes
        command: bash -c " /etc/init.d/openbsd-inetd start && tail -f /dev/null"
                 
    Monitor:
        image: handsonsecurity/seed-ubuntu:large
        container_name: Monitor-10.9.0.3
        tty: true
        cap_add:
                - ALL
        networks:
            net-10.9.0.0:
                ipv4_address: 10.9.0.3
        volumes:
                - ./volumes:/volumes
        command: bash -c " /etc/init.d/openbsd-inetd start && tail -f /dev/null"

    Target:
        image: handsonsecurity/seed-ubuntu:large
        container_name: Target-10.9.0.4
        tty: true
        cap_add:
                - ALL
        networks:
            net-10.9.0.0:
                ipv4_address: 10.9.0.4
        volumes:
                - ./volumes:/volumes
        command: bash -c " /etc/init.d/openbsd-inetd start && tail -f /dev/null"

networks:
    net-10.9.0.0:
        name: net-10.9.0.0
        ipam:
            config:
                - subnet: 10.9.0.0/24


# version: '3'

# services:
#   ApacheServer:
#     image: httpd:latest                         # Latest version of Apache HTTP Server image
#     container_name: apache-10.9.0.2             # Name of the Apache container
#     cap_add:                                    # Give the server necessary capabilities
#       - ALL       
#     privileged: true                            # Run the server with root privileges
#     networks:      
#       net-10.9.0.0:                             # Attach to the custom network
#         ipv4_address: 10.9.0.2                  # Static IP address for the server
#     ports:
#       - "80:80"                                 # Expose port 80 to the host (accessible via 'http://localhost:80')

#   attacker:
#     build: ./attacker                           # Build from Dockerfile inside 'attacker' directory
#     container_name: attacker-10.9.0.3           # Name of the attacker container
#     networks:
#       net-10.9.0.0:                             # Attach to the custom network
#         ipv4_address: 10.9.0.3                  # Static IP address for the attacker
#     cap_add:
#       - ALL                                     # Give the attacker necessary capabilities
#     privileged: true                            # Run the attacker with root privileges

#   Monitor:
#     image: ubuntu:latest                        # Latest version of Ubuntu
#     container_name: monitor-all                 # Name of the monitor container
#     network_mode: host                          # Use host networking (so it can ping other containers)
#     command: bash -c "ping -c 5 10.9.0.2"       # Send 5 ping requests to Apache server
#     cap_add:
#       - ALL                                     # Give monitor container necessary capabilities
#     privileged: true                            # Run monitor with root privileges

# networks:
#   net-10.9.0.0:
#     driver: bridge
#     ipam:
#       config:
#         - subnet: 10.9.0.0/24                   # Define the custom network's subnet
